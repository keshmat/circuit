---
import { supabase } from "../db/supabase";
---

<div class="card bg-base-200 w-full max-w-md mx-auto">
  <div class="card-body">
    <h2 class="card-title">Admin Login</h2>
    <form id="auth-form" class="space-y-6">
      <div class="form-control w-full">
        <label class="label" for="email">
          <span class="label-text">Email</span>
        </label>
        <input
          type="email"
          id="email"
          name="email"
          class="input input-bordered w-full"
          required
        />
      </div>

      <div id="otp-section" class="form-control w-full hidden">
        <label class="label" for="otp">
          <span class="label-text">One-Time Password</span>
        </label>
        <input
          type="text"
          id="otp"
          name="otp"
          class="input input-bordered w-full"
          placeholder="Enter the 6-digit code"
          pattern="[0-9]{6}"
          maxlength="6"
        />
      </div>

      <div class="form-control">
        <label class="label cursor-pointer justify-start gap-2">
          <input
            type="checkbox"
            id="remember-me"
            name="remember-me"
            class="checkbox checkbox-primary"
          />
          <span class="label-text">Remember me for 30 days</span>
        </label>
      </div>

      <div class="card-actions justify-end mt-6">
        <button type="submit" id="submit-button" class="btn btn-primary w-full">
          Send Code
        </button>
      </div>
    </form>
  </div>
</div>

<script>
  const form = document.getElementById("auth-form") as HTMLFormElement;
  const signoutForm = document.getElementById(
    "signout-form"
  ) as HTMLFormElement;
  const otpSection = document.getElementById("otp-section") as HTMLDivElement;
  const submitButton = document.getElementById(
    "submit-button"
  ) as HTMLButtonElement;
  const emailInput = document.getElementById("email") as HTMLInputElement;
  const otpInput = document.getElementById("otp") as HTMLInputElement;
  const rememberMe = document.getElementById("remember-me") as HTMLInputElement;
  let currentEmail = "";

  if (signoutForm) {
    signoutForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      try {
        const response = await fetch("/api/auth/signout", {
          method: "POST",
        });

        if (!response.ok) {
          throw new Error("Failed to sign out");
        }

        // Redirect to login page
        window.location.href = "/admin/login";
      } catch (error) {
        console.error("Error signing out:", error);
        const notification = document.createElement("div");
        notification.className = "toast toast-top toast-end";
        notification.innerHTML = `
          <div class="alert alert-error">
            <span>Failed to sign out. Please try again.</span>
          </div>
        `;
        document.body.appendChild(notification);
        setTimeout(() => notification.remove(), 3000);
      }
    });
  }

  if (form) {
    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      // Get form values
      const email = emailInput.value.trim();
      const otp = otpInput.value.trim();
      const rememberMeValue = rememberMe.checked;

      if (!email) {
        console.error("Email is empty or null");
        const notification = document.createElement("div");
        notification.className = "toast toast-top toast-end";
        notification.innerHTML = `
          <div class="alert alert-error">
            <span>Please enter your email address</span>
          </div>
        `;
        document.body.appendChild(notification);
        setTimeout(() => notification.remove(), 3000);
        return;
      }

      try {
        if (!otpSection.classList.contains("hidden")) {
          // Verify OTP - use the stored email
          const response = await fetch("/api/auth/signin", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              email: currentEmail,
              otp,
              "remember-me": rememberMeValue,
            }),
          });

          if (!response.ok) {
            const responseData = await response.json();
            throw new Error(responseData.error || "Verification failed");
          }

          // Show success message and button
          form.innerHTML = `
            <div class="text-center space-y-4">
              <div class="alert alert-success">
                <span>Login successful!</span>
              </div>
              <a href="/admin/registrations" class="btn btn-primary w-full">
                Go to Registrations
              </a>
            </div>
          `;
        } else {
          // Send OTP
          const response = await fetch("/api/auth/signin", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              email,
              "remember-me": rememberMeValue,
            }),
          });

          if (!response.ok) {
            const responseData = await response.json();
            throw new Error(responseData.error || "Failed to send OTP");
          }

          // Store the email for verification
          currentEmail = email;

          // Show OTP input
          otpSection.classList.remove("hidden");
          emailInput.disabled = true;
          submitButton.textContent = "Verify Code";
          otpInput.required = true;

          // Show success notification
          const notification = document.createElement("div");
          notification.className = "toast toast-top toast-end";
          notification.innerHTML = `
            <div class="alert alert-success">
              <span>Verification code sent to your email</span>
            </div>
          `;
          document.body.appendChild(notification);
          setTimeout(() => notification.remove(), 3000);
        }
      } catch (error) {
        console.error("Error:", error);
        // Show error notification
        const notification = document.createElement("div");
        notification.className = "toast toast-top toast-end";
        notification.innerHTML = `
          <div class="alert alert-error">
            <span>${error instanceof Error ? error.message : "An error occurred"}</span>
          </div>
        `;
        document.body.appendChild(notification);
        setTimeout(() => notification.remove(), 3000);
      }
    });
  }
</script>
